{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { loginFailure, loginSuccess, logout, register, registerFailure, registerSuccess } from '../actions/authenticator.actions';\nimport { updateUserStateProperty } from '../actions/user-management.actions';\nexport const initialState = {\n  isLoggedIn: false,\n  user: null\n};\nexport const authReducer = createReducer(initialState, on(register, (state, action) => {\n  return Object.assign({}, state);\n}), on(loginSuccess, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    isLoggedIn: true,\n    user: action.user\n  });\n}), on(loginFailure, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    isLoggedIn: false,\n    user: null\n  });\n}), on(registerSuccess, (state, action) => {\n  return Object.assign({}, state);\n}), on(registerFailure, (state, action) => {\n  return Object.assign({}, state);\n}), on(updateUserStateProperty, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    user: action.user\n  });\n}), on(logout, (state, action) => {\n  return Object.assign(Object.assign({}, state), {\n    isLoggedIn: false,\n    user: null\n  });\n}));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}